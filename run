#!/bin/bash
clear

# Define o usuário a partir do arquivo 'user'
user=$(cat user)

# Lê os IPs do arquivo 'target'
ips=( $(cat target) )

# Verifica se algum comando foi passado como argumento
if [ $# -gt 0 ]; then
  command="$@"
else
  command=$(cat 2dos)
fi

# Cores para destaque
RED='\033[0;31m'
GREEN='\033[0;32m'
GRAY='\033[0;90m'
NC='\033[0m' # Sem cor

# Faz um loop sobre os IPs
for ip in "${ips[@]}"; do

  # Verifica a conexão SSH antes de executar qualquer coisa
  ssh -q -o ConnectTimeout=3 $user@$ip "exit"
  if [ $? -ne 0 ]; then
    echo -e "${RED}------------------------------[ Servidor Inacessível - $ip ]------------------------------${NC}\n"
    echo ""
    echo ""
    continue
  fi

  # Captura o hostname remoto diretamente do servidor remoto via SSH
  hostname_remote=$(ssh -q -o ConnectTimeout=3 $user@$ip 'hostname')

  # Executa o comando ou o conteúdo do arquivo 'task-list' no servidor remoto
  output=$(ssh -q -o ConnectTimeout=3 $user@$ip "bash -c '$command'")

  # Verifica se a saída está vazia e ajusta a cor do cabeçalho
  if [ -z "$output" ]; then
    # Exibe o cabeçalho em amarelo se a saída estiver vazia
    echo -e "${GRAY}-----------------------------------[ $hostname_remote - $ip ]-----------------------------------${NC}"
    echo ""
    echo ""
  else
    # Exibe o cabeçalho em verde se houver saída
    echo -e "${GREEN}-----------------------------------[ $hostname_remote - $ip ]-----------------------------------${NC}"
    echo ""
    echo "$output"  # Exibe a saída do comando
  fi

  # Adiciona uma linha em branco após a execução de cada bloco
  echo ""
done

